allprojects {

    ext {
        kotlinVersion = "1.2.50"
        springBootVersion = '1.5.6.RELEASE'
        jacksonVersion = '2.9.0'
        jettyVersion = '9.4.2.v20170220'
        logbackVersion = '1.2.3'
        groovyVersion = '2.4.15'
        slf4jVersion = '1.7.24'
        querydslVersion = '4.1.4'
        hibernateVersion = '5.4.1.Final'
        wiccVersion = '0.1800.2-SNAPSHOT'

    }

    repositories {
        maven { url "http://nexus.wisedev.cn/content/groups/public" }
        jcenter()
        mavenCentral()
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    configurations {
        compile.exclude module: "spring-boot-starter-tomcat"
    }


}

subprojects {

    group 'com.waykichain'
    version "$ext.wiccVersion"

    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    
    

    repositories {
        maven { url "http://nexus.wisedev.cn/content/groups/public" }
        maven { url "https://mvnrepository.com/artifact/org.eclipse.paho/org.eclipse.paho.client.mqttv3" }
        mavenCentral()
        jcenter()
    }

    dependencies {

        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1"
        compile group: 'com.alibaba', name: 'fastjson', version: '1.2.47'

        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

        compile('net.sf.json-lib:json-lib:2.4:jdk15')
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlinVersion"
        compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0')

        compile("org.springframework.boot:spring-boot-starter-cache:$springBootVersion")
        compile("org.springframework.boot:spring-boot-starter-aop:$springBootVersion")

        // Logginggit 
        compile "org.slf4j:slf4j-api:$slf4jVersion"
        compile "ch.qos.logback:logback-classic:$logbackVersion"

        // API Doc Generator: Swagger
        compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.6.1'
        compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.6.1'

        // Groovy
        compile "org.codehaus.groovy:groovy-all:${groovyVersion}"
        compile 'org.codehaus.groovy:groovy-backports-compat23:2.4.5'

        compile 'joda-time:joda-time:2.9.9'

        // https://mvnrepository.com/artifact/org.eclipse.paho/org.eclipse.paho.client.mqttv3
        compile group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.1.1'

        testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")

        compile 'junit:junit-dep:4.11'
        testCompile "junit:junit:4.12"

    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

}

buildscript {
    ext.kotlinVersion = '1.2.50'
    ext.springBootVersion = '1.5.6.RELEASE'
    repositories {
        maven { url "http://nexus.wisedev.cn/content/groups/public" }
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
         classpath "gradle.plugin.ua.eshepelyuk:ManifestClasspath:1.0.0"
    }
}

apply plugin: "ua.eshepelyuk.ManifestClasspath"

